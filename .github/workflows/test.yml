name: Ripes Tests

on:
  push:
    branches:
      - '*'
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, ubuntu-16.04, ubuntu-18.04]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    # Container preparation
      # Ubuntu
    - if: contains( matrix.os, 'ubuntu')
      name: Prepare ubuntu container for build
      run: |
        sudo apt-get update
        sudo apt-get upgrade -y
        DEBIAN_FRONTEND=noninteractive sudo apt-get install -y -q --force-yes \
        automake cmake git wget libfuse2 desktop-file-utils tree \
        build-essential libgl1-mesa-dev libxkbcommon-x11-0 libpulse-dev
        echo "CC=gcc-9" >> $GITHUB_ENV
        echo "CXX=g++-9" >> $GITHUB_ENV

      # MacOS
    - if: contains( matrix.os, 'macos')
      name: Prepare macos container for build
      run: brew install autoconf automake libtool xz  pkg-config libgit2 libjpg libpng libmtp

      # Windows
    - if: contains( matrix.os, 'windows')
      name: Prepare windows container for build
      uses: ilammy/msvc-dev-cmd@v1
    - if: contains( matrix.os, 'windows')
      uses: seanmiddleditch/gha-setup-ninja@master

    # Qt installation
    - if: "!contains(matrix.os, 'windows')"
      name: install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.15.2'
        modules: 'qtcharts qtsvg'
        install-deps: false

    - if: contains( matrix.os, 'windows')
      name: install Qt (Windows)
      uses: jurplel/install-qt-action@v2
      with:
        version: '5.15.2'
        modules: 'qtcharts qtsvg'
        install-deps: false
        arch: win64_msvc2019_64

    # Build ripes
    - if: "!contains(matrix.os, 'windows')"
      name: build Ripes
      run: |
        cmake -DCMAKE_BUILD_TYPE=Release .
        make -j $(nproc)

    - if: contains(matrix.os, 'windows')
      name: build Ripes (Windows)
      shell: bash
      run: |
        cmake -GNinja-DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=cl
        cmake --build .
